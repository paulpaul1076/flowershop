<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/jee
       http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://cxf.apache.org/jaxws
       http://cxf.apache.org/schemas/jaxws.xsd">

    <bean id="userBusinessService" class="com.accenture.flowershop.be.business.UserBusinessServiceImpl">
        <constructor-arg ref="user_dao" />
        <constructor-arg ref = "userMarshallingService"/>
    </bean>

    <bean id="user_dao" class="com.accenture.flowershop.be.access.UserAccessServiceImpl">
    </bean>

    <bean id="flowerBusinessService" class="com.accenture.flowershop.be.business.FlowerBusinessServiceImpl">
        <constructor-arg ref="flower_dao" />
    </bean>

    <bean id="flower_dao" class="com.accenture.flowershop.be.access.FlowerAccessServiceImpl">
    </bean>

    <bean id="orderBusinessService" class="com.accenture.flowershop.be.business.OrderBusinessServiceImpl">
        <constructor-arg ref="order_dao" />
        <constructor-arg ref="userBusinessService" />
        <constructor-arg ref = "flowerBusinessService" />
    </bean>

    <bean id="order_dao" class="com.accenture.flowershop.be.access.OrderAccessServiceImpl">
    </bean>

    <bean id="userMarshallingService" class="com.accenture.flowershop.be.xml.UserMarshallingServiceImpl">
        <constructor-arg ref="xmlConverter"/>
    </bean>

    <bean id="xmlConverter" class="com.accenture.flowershop.be.xml.XMLConverter">
        <constructor-arg ref="marshaller"/>
    </bean>

    <!--Web service stuff-->
    <jaxws:endpoint
        id = "flowerStockWebService"
        implementor="com.accenture.flowershop.be.business.FlowersStockWebServiceImpl"
        address="/flowersStockWebService" >

    </jaxws:endpoint>

    <bean id="marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="packagesToScan">
            <list>
                <value>com.accenture.flowershop.be.entity</value>
            </list>
        </property>
    </bean>


    <context:annotation-config/>
    <tx:annotation-driven/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" >
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>



    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/flowerShopDS"/>

    <!--do I need this?????-->
    <bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver" />
        <property name="url" value="jdbc:h2:tcp://localhost/~/test" />
        <property name="username" value="sa" />
        <property name="password" value="" />
    </bean>

    <!-- flyway stuff-->
    <bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate">
        <property name="dataSource" ref="dataSource"/>   <!-- reference to datasource bean-->
        <property name="locations">
            <list><value>dbscripts</value></list> <!--it used to say <array> instead of <list> here -->
        </property>

        <!--<property name="locations" value="dbscripts"/>-->
        <property name="baselineOnMigrate" value="false"/>
        <!--<property name="schemas" value="my_app"/>-->
        <property name="outOfOrder" value="true"/>
        <property name="sqlMigrationPrefix" value="v"/>
        <property name="sqlMigrationSeparator" value="__"/>
        <property name="placeholderPrefix" value="@{"/>
        <property name="placeholderSuffix" value="}"/>
    </bean>

    <!-- entityManager stuff -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" 	depends-on="flyway">
        <property name="dataSource" ref="dataSource"/>
        <!--<property name="persistenceUnitName" value="myPersistenceUnit"/>-->
        <property name="packagesToScan">
            <list>
                <value>com.accenture.flowershop.be.entity</value>
            </list>
        </property>
        <property name="jpaVendorAdapter">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
             <property name="database" value="ORACLE" />
             <property name="generateDdl" value="false"/>
             <property name="showSql" value="true"/>
         </bean>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
	            <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>
</beans>
